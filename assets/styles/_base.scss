/* General */

*, *:before, *:after {
	@include box-sizing(border-box); 
}	
html {
	@include experimental(text-size-adjust, 100%);
	font-size: $font-size;
	line-height: $line-height;
	font-family: $font-family;
	color: $color-foreground;
	font-weight: normal;
}

/* Header */

#{headers(1, 6)} { 
	font-weight: normal;
	color: $color-loud;
	margin: $gutter 0 0 0;
	line-height: 1;
}
h1 { 
	@include font-size(6);
}
h2 { 
	@include font-size(3);
}
h3 { 
	@include font-size(0);
}
h4 { 
	@include font-size(0);
}
h5 { 
	@include font-size(0);
}
h6 { 
	@include font-size(0);
}

/* Paragraph */

p { 
	margin: $gutter 0 0 0;
	&.summary { 
		@include font-size(1);
	}
	&.details { 
		color: $color-quiet;
		margin-top: 0;
	}
}

/* List */

ul, ol { 
	margin: $gutter 0 0 0;
	padding: 0;
	ul, ol { 
		margin-top: 0;
	}
	li { 
		margin: 0 0 0 $gutter;
	}
}
ul { 
	list-style: disc;
	ul { 
		list-style: circle;
		ul { 
			list-style: square;
		}
	}
}
ol { 
	list-style: decimal;
	ol { 
		list-style: lower-alpha;
		ol { 
			list-style: lower-roman;
		}
	}
}
dl { 
	margin: $gutter 0 0 0;
	dt { 
		font-weight: bold;
		float: left;
		width: (100px - $gutter);
	}
	dd { 
		margin-left: 100px;
	}
}

/* Link */

a { 
	@include link-color($color-primary);
	@include transition(all $speed ease);
	text-decoration: underline;
}

/* Emphasised & Marked */

em { 
	font-style: normal;
	color: $color-primary;
}
strong { 
	font-weight: bold;
}
mark { 
	background-color: $color-highlight;
	@include border-radius(2px);
}

/* Quote */

blockquote { 
	font-style: oblique;
	margin: $gutter 0 0 0;
	padding: 0 $gutter;
	border-left: 1px solid $color-divide;
	@include flush;
}
q { 
	quotes: '\201C' '\201D' '\2018' '\2019';
	&:before { 
		content: open-quote;
	}
	&:after { 
		content: close-quote;
	}
}

/* Preformatted & Code */

pre, code { 
	font-family: $font-family-monospace;
	@include font-size;
	@include border-radius($radius);
}
pre { 
	margin: $gutter 0 0 0; padding: $gutter;
	@include experimental(tab-size, 4);
	background: $color-shade;
}
code { 
	padding: 0 0.2em;
}
pre code { 
	padding: 0;
}

/* Abbreviation */

abbr { 
	border-bottom: 1px dotted;
	cursor: help;
}

/* Superscript & Subscript */

sup { 
	vertical-align: super;
	vertical-align: 5px;
}
sub { 
	vertical-align: sub;
	vertical-align: -3px;
}

/* Deleted & Inserted */

del, strike { 
	text-decoration: line-through;
}
ins, u { 
	text-decoration: underline;
}

/* Note & Error */

small { 
	color: $color-quiet;
	font-size: inherit;
}
.error { 
	color: $color-negative;
}

/* Badge */

.badge {
	background-color: $color-quiet;
	border: 1px solid $color-quiet;
	color: white;
	font-weight: normal;
	@include font-size(-1);
	padding: 0 $gutter * 0.25;
	padding-bottom: 1px;
	vertical-align: 1px;
	display: inline-block;
	td &, th & {
		width: 100%;
	}
}
.badge-figure {
	border-radius: 1000px;
}
.badge-status {
	@extend .badge;
	text-transform: uppercase;
}
.badge-0,
.badge-archived {
	@extend .badge;
	background-color: white;
	color: $color-quiet;
}
.badge-pending {
	@extend .badge;
	background-color: $color-pending;
	border-color: $color-pending;
}
.badge-1 {
	@extend .badge;
	background-color: $color-positive;
	border-color: $color-positive;
}
.badge-published {
	@extend .badge;
}

.status-pending {
	color: $color-pending;
}

/* Icons */


/* Rule */

hr { 
	margin: $gutter 0;
	border: 0;
	border-top: 1px solid $color-divide;
}

/* Image */

img, svg { 
	display: inline-block;
	vertical-align: middle;
}
img {
	border: 0;
	-ms-interpolation-mode: bicubic;
}
svg {
	max-height: 100%;
}
.image {
	margin: $gutter 0 0 0;
	img, svg {
		display: block;
	}
	img {
		width: 100%;
		height: auto;
	}
}

/* Audio */

audio {
	display: inline-block;
	vertical-align: middle;
}
.audio {
	margin: $gutter 0 0 0;
	audio, object, .audio-message {
		display: block;
		width: 100%;
	}
	.audio-message {
		background: $color-shade;
		text-align: center;
		padding: $gutter;
	}
}

/* Video */

video {
	display: inline-block;
	vertical-align: middle;
}
.video {
	margin: $gutter 0 0 0;
	position: relative;
	video, object, .video-message {
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
	.video-message {
		background: $color-shade;
		@include vertically-center(span);
		span {
			text-align: center;
			padding: $gutter;
		}
	}
	.ratio {
		display: block !important;
	}
}

/* Figures */

figure { 
	margin: $gutter 0 0 0;
	@include flush;
	figcaption { 
		@include font-size(-2);
		margin: $gutter * 0.4 0 0 0;
		display: block;
		font-weight: 500;
	}
}

/* Thumbs */

.thumbs {
	margin-top: $gutter;
	@include no-bullets;
	@include inline-blocks('li', $gutter * 0.75, $gutter * 0.75);
	li {
		width: 200px;
		figure {
			margin-top: 0;
		}
	}
}
.thumb {
	position: relative;
	background-color: white;
	outline-color: white;
	@include link-color($color-foreground);
	@include transition(background-color $speed ease, outline-color $speed ease);
	.preview {
		background-color: tint($color-primary, 80%);
		position: relative;
		&:before {
			content: '';
			display: block;
			@include ratio(1px, 1px);
		}
		img, 
		.text, 
		.progress {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		}
		img {
			width: 100%;
			height: auto;
		}
		.text {
			text-align: center;
			@include vertically-center('span');
			span {
				text-transform: uppercase;
				@include font-size(40px);
				color: white;
			}
		}
		.progress {
			z-index: 2;
			background-color: tint($color-active, 50%);
			span {
				display: block;
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100%;
				overflow: hidden;
				background-color: $color-active;
				@include transition(height $speed linear);
			}
			&.out {
				background-color: transparent;
				pointer-events: none;
				span {
					bottom: auto;
					top: 0;
				}
			}
		}
		.badge {
			position: absolute;
			bottom: 0;
			right: 0;
		}
	}
	figcaption {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}
	input[type=checkbox] + label {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		cursor: default;
		&:before {
			opacity: 0.5;
			margin: $gutter * 0.5 $gutter $gutter $gutter * 0.5;
			border: transparent !important;
		}
		&:hover:before {
			opacity: 1;
		}
	}
	a {
		text-decoration: none;
		@include link-color(inherit);
	}
	&.selected {
		input[type=checkbox] + label:before {
			opacity: 1;
		}
		.preview {
			img {
				-webkit-filter: grayscale(1);
			}
		}
	}
}

/* Table */

table { 
	width: 100%;
	margin: $gutter 0 0 0;
	border-spacing: 0;
	@include border-radius($radius);
	tr {
		th, td {
			border-bottom: 1px solid $color-shade;
			&:first-child {
				border-left: 0;
			}
		}
		&:first-child {
			th, td {
				border-top: 0;
			}
		}
	}
	thead {
		th {
			font-weight: bold;
		}
		tr:last-child {
			th, td {
				border-bottom: 1px solid $color-divide;
			}
		}
	}
	tfoot {
		tr:first-child {
			th, td {
				border-top: 1px solid $color-divide;
			}
		}
	}
	th, td { 
		vertical-align: top;
		padding: $gutter * 0.25 0 $gutter * 0.25 $gutter * 0.75;
		&:first-child {
			padding-left: 0;
		}
	}
	th { 
		font-weight: normal;
		text-align: left;
		&, a {
			@include link-color($color-loud);
		}
	}
	tbody {
		th, td { 
			@include transition(all $speed ease);
		}
		tr {
			&:hover { 
				th, td { 
					background-color: tint($color-shade, 75%);
				}
			}
		}
	}
	caption { 
		@include font-size(-1);
		font-style: oblique;
		text-align: right;
		margin: $gutter * 0.5 0 0 0;
		caption-side: bottom;
	}
	.col-status,
	.col-role {
		width: 1px;
		text-align: center;
		.status {
			width: 100%;
		}
		&:last-child {
			text-align: right;
		}
	}
	.col-type {
		width: 100px;
	}
	.col-date {
		text-align: right;
	}
	.col-select {
		width: 1px;
		padding: 0;
		input[type=checkbox] + label {
			display: block;
			&:before {
				margin: $gutter * 0.25 0;
				height: 24px;
				width: 24px;
			}
		}
	}
}

/* Selectable */

.selectable-only {
	a {
		pointer-events: none;
		cursor: default;
	}
}
.selected {
	input[type=checkbox] + label:before {
		background-color: $color-active !important;
		border-color: shade($color-active, 15%) !important;
	}
}

/* Input */

/* Because line-height on form elements is ignored by Firefox, using padding-top/bottom
   creates height inconsistencies, therefore we leave padding at 0px and explictly set
   the height, to ensure height and vertical-alignment consistency. Text is vertically
   aligned in the center automatically by the browser (except selects in Firefox) */
$input-border-width:	1px;
$input-padding: 		6px;
$input-padding-horiz:	$input-padding + 4px;
$input-height:			round($font-size * $line-height)
						+ ($input-padding * 2)
						+ ($input-border-width * 2);
$input-toggle-size:		$input-height - 10px;

input,
select,
textarea,
.btn { 
	@include transition(all $speed ease);
}

input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=email],
input[type=month],
input[type=number],
input[type=password],
input[type=search],
input[type=tel],
input[type=text],
input[type=time],
input[type=url],
input[type=week],
textarea,
select,
.value,
.content { 
	display: inline-block;
	@include font-size(0);
	font-family: $font-family;
	color: $color-foreground;
	text-align: left;
	font-weight: normal;
	height: $input-height;
	line-height: $input-height - ($input-border-width * 2);
	vertical-align: baseline;
	width: $width-12;
	margin: 0;
	padding: 0 $input-padding-horiz;
	background-color: white;
	border: $input-border-width solid;
	border-color: $color-quieter;
	@include border-radius($radius);
	outline: 0;
	-webkit-appearance: none;
	&[disabled] {
		background-color: $color-shade;
	}
	&:focus:invalid {
		border-color: $color-negative;
	}
	@include placeholder {
		color: $color-quieter;
	}
	.sidebar & {
		border-color: $color-primary;
		border-bottom-color: shade($color-primary, 30%);
		background-color: $color-primary;
		color: inherit;
		padding-left: $gutter;
		padding-right: $gutter;
	}
}
input[type=checkbox],
input[type=radio] {
	position: absolute;
	left: -10000px;
	& + label {
		position: relative;
		&:before {
			content: '';
			display: inline-block;
			width: $input-toggle-size;
			height: $input-toggle-size;
			border: 1px solid $color-quieter;
			background: white;
			vertical-align: -8px;
			margin-right: 0.25em;
			background-position: center;
			background-repeat: no-repeat;
			@include transition(all $speed linear);
		}
	}
	&:focus + label:before {
		border-color: tint($color-primary, 50%);
	}
	&[disabled] + label:before {
		background-color: $color-shade;
	}
}
input[type=radio] + label:before {
	border-radius: 50%; 
}
input[type=checkbox]:checked + label:before {
	background-image: inline-image('tick.svg');
}
input[type=radio]:checked + label:before {
	background-image: inline-image('dot.svg');
}
select { 
	width: auto;
	optgroup {
		@include font-size(0);
		font-family: $font-family;
		font-style: normal;
		font-weight: normal;
		color: $color-quiet;
		text-indent: 3px;
		option {
			color: $color-foreground;
		}
	}
	padding-right: 0;
	/* Include an arrow icon for WebKit */
	@media (-webkit-min-device-pixel-ratio: 0) {
		background-position: 100% 50%;
		background-repeat: no-repeat;
		@include image(arrow-select);
		padding-right: 35px;
	}
	/* Fix Firefox not vertically centering text */
	@media (min--moz-device-pixel-ratio: 0) {
		/* Replicate the problem line-height value from the default CSS, in case
		   it's changed in future, to avoid knock-on effects from this fix */
		line-height: normal !important;
		padding: $input-padding + 1px;
	}
}
textarea { 
	height: auto;
	display: block;
	overflow: auto;
	resize: vertical;
	line-height: $line-height;
	padding-top: $input-padding;
	padding-bottom: $input-padding;
	&.monospaced {
		font-family: Consolas, monospace;
	}
}
.value {
	overflow: hidden;
	white-space: nowrap;
	vertical-align: bottom;
	text-overflow: ellipsis;
	.placeholder {
		color: $color-quieter;
	}
}
.content {
	height: auto;
	padding: $input-padding;
	line-height: $line-height;
	.toolbar {
		margin-top: 0;
	}
	.placeholder {
		color: $color-quieter;
		height: $input-height;
		line-height: $input-height - ($input-border-width * 2);
		vertical-align: baseline;
		padding: 0 $input-padding-horiz;
		border: transparent $input-border-width solid;
		display: inline-block;
	}
}

input[type=reset],
input[type=submit],
input[type=button],
.btn { 
	font-family: $font-family;
	@include font-size;
	height: $input-height;
	line-height: $input-height - ($input-border-width * 2);
	vertical-align: baseline;
	width: auto;
	padding: 0 $input-padding-horiz;
	margin: 0;
	font-weight: normal;
	@include link-color(white !important);
	background-color: $color-quiet;
	border: $input-border-width solid;
	border-color: $color-quiet;
	@include border-radius($radius);
	outline: 0;
	cursor: pointer;
	text-decoration: none !important;
	-webkit-appearance: none;
	display: inline-block;
	.fa {
		padding-right: 0.1em;
	}
	&[disabled] {
		opacity: 0.25;
	}
	&:hover { 
		background-color: shade($color-quiet, 10%) !important;
		border-color: shade($color-quiet, 10%) !important;
	}
	&.active {
		@include arrow(38px, 1px);
	}
	&.btn-collapse {
		max-height: 40px;
		overflow: hidden;
		&[disabled] {
			opacity: 1;
			border-top-width: 0; 
			border-bottom-width: 0;
			max-height: 0;
		}
	}
	&.btn-block {
		display: block;
		width: 100%;
		text-align: center;
		margin: $gutter 0 0 0;
		& + .btn-block {
			margin-top: 0;
		}
	}
	&.btn-inline {
		display: inline;
		height: auto;
		line-height: 1;
		padding-top: $input-padding * 1.1;
		padding-bottom: $input-padding * 1.1;
	}
	&.btn-focus {
		background-color: $color-focus;
		border-color: $color-focus;
		&:hover { 
			background-color: shade($color-focus, 10%) !important;
			border-color: shade($color-focus, 10%) !important;
		}
	}
	&.btn-pending {
		background-color: $color-pending;
		border-color: $color-pending;
		&:hover { 
			background-color: shade($color-pending, 10%) !important;
			border-color: shade($color-pending, 10%) !important;
		}
	}
	&.btn-positive {
		background-color: $color-positive;
		border-color: $color-positive;
		&:hover { 
			background-color: shade($color-positive, 10%) !important;
			border-color: shade($color-positive, 10%) !important;
		}
	}
	&.btn-negative {
		background-color: $color-negative;
		border-color: $color-negative;
		&:hover { 
			background-color: shade($color-negative, 10%) !important;
			border-color: shade($color-negative, 10%) !important;
		}
	}
	&.btn-quiet {
		background-color: $color-quiet;
		border-color: $color-quiet;
	}
}

input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=email],
input[type=month],
input[type=number],
input[type=password],
input[type=search],
input[type=tel],
input[type=text],
input[type=time],
input[type=url],
input[type=week],
textarea,
select { 
	&:focus {
		border-color: tint($color-primary, 50%);
	}
}

input,
select,
select option,
select optgroup,
textarea,
.btn {
	&[disabled], &.disabled {
		@include experimental(user-select, none);
		pointer-events: none;
		cursor: default;
	}
}

.dropdown {
	position: relative;
	cursor: default;
	display: inline-block;
	vertical-align: bottom;
	width: 100%;
	z-index: 500;
	.value {
		background-position: 100% 50%;
		background-repeat: no-repeat;
		@include image(arrow-select);
		padding-right: 35px;
	}
	.menu {
		margin-top: 0;
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		white-space: nowrap;
		max-height: 0;
		border-top-width: 0;
		border-bottom-width: 0;
		overflow: hidden;
		@include transition(max-height $speed ease);
		@include box-shadow(0 5px 0 0 transparentize(black, 0.95));
		&:hover {
			overflow-y: auto;
		}
	}
	&:hover .menu {
		max-height: 300px;
		border-bottom-width: 1px;
	}
	.sidebar & .value {
		@include image(arrow-dropdown);
	}
}

::-moz-focus-inner {
	border: 0;
	padding: 0;
}
::-webkit-search-decoration,
::-webkit-search-cancel-button {
	-webkit-appearance: none;
}
::-ms-clear {
	display: none;
}

/* Form */

form { 
	margin: $gutter 0 0 0;
	padding: 0;
	@include flush;
}
fieldset { 
	margin: 0;
	padding: 0;
	border: 0;
	@include flush; 
}
legend { 
	display: none;
}
.form-block {
	margin: $gutter 0 0 0;
	padding-top: $gutter;
	border-top: 1px solid $color-divide;
	.form-legend {
		float: left;
		width: 260px - ($gutter * 3);
		@include flush;
		@include font-size(-1);
		h2 {
			@include force-wrap;
		}
		p {
			margin-top: $gutter * 0.5;
		}
	}
	.form-items {
		margin-left: 260px - ($gutter * 1.5);
		@include flush;
	}
}
.form-item { 
	margin: $gutter 0 0 0;
	+ .form-item {
		margin-top: $gutter * 0.75;
	}
	> label {
		color: $color-loud;
		display: block;
		font-weight: bold;
	}
	> div { 
		margin: $gutter  * 0.25 0 0 0;
		p { 
			@include font-size(-1);
			margin-top: round($gutter  * 0.4);
			line-height: $line-height-tight;
			& + p {
				margin-top: 0;
			}
		}
		label{ 
			padding-right: 0.5em;
		}
	}
	&.optional {
		> label:after {
			content: 'Optional';
			color: tint($color-quiet, 0%);
			margin-left: 0.25em;
			float: right;
			font-weight: normal;
		}
	}
}

/* Links */

.links {
	ul {
		@include no-bullets;
		@include collapse-whitespace(li);
		li {
			margin-left: round($gutter * 0.5);
			padding-left: round($gutter * 0.5);
			border-left: 1px solid;
			@include inline-block(top);
			&:first-child {
				margin-left: 0;
				padding-left: 0;	
				border-left: 0;
			}	
		}
	}
}

/* Meta */

.meta {
	margin-top: $gutter * 0.4;
	@include no-bullets;
	@include inline-blocks('> li', $gutter * 0.75);
	color: $color-quiet;
	i {
		color: $color-foreground;
	}
	a {
		text-decoration: none;
	}
}

/* Toolbar */

.toolbar {
	@include no-bullets;
	@include inline-blocks('> li', $gutter * 0.25);
	&:first-child {
		float: right;
		@include flush-next;
	}
	> li {
		vertical-align: middle;
		& + li.space {
			padding-left: $gutter * 0.75;
		}
	}
	a {
		text-decoration: none;
	}
}

/* Filters */

.filters {
	margin-top: $gutter;
	@include no-bullets;
	@include inline-blocks('> li');
	display: flex;
	flex-direction: row;
	z-index: 500;
	position: relative;
	> li {
		flex: 2;
		&:first-child {
			flex: 3;
		}
	}
	i {
		color: $color-quiet;
	}
	.value {
		border-left: 0;
	}
	.dropdown .menu {
		left: -1px;
	}
}

/* Uploadable */

.uploadable {
	.uploadable-input {
		display: none;
	}
}

/* Search */

.search {
	position: relative;
	i {
		position: absolute;
		top: 50%;
		left: $input-padding-horiz + $input-border-width;
		margin-top: -8px;
	}
	input {
		padding-left: $input-padding-horiz + $input-border-width + 15px + 7px;
	}
}

/* Expandable */

.expandable {
	.expandable-body {
		max-height: 0;
		overflow: hidden;
		@include transition(max-height $speed ease);
	}
	.expandable-toggle {
		margin: $gutter 0 0 0;
		display: block;
		background-color: $color-shade;
		color: $color-quiet;
		text-align: center;
		padding: $gutter * 0.2 $gutter;
		cursor: pointer;
		@include transition(background $speed ease);
		&:hover {
			color: white;
			background-color: $color-quieter;
		}
		i {
			@include transition(transform $speed ease);
		}
	}
	&.active {
		.expandable-body {
			max-height: 500px;
		}
		.expandable-toggle i {
			@include transform(rotate(180deg));
		}
	}
}

/* Clickable */

.clickable {
	a {
		@include hover-link;
		&.hover {
			text-decoration: underline;
		}
	}
	&:hover {
		cursor: pointer;
	}
}

/* Status */

.status {
	color: $color-quiet;
	strong {
		color: $color-foreground;
	}
	.badge {
		margin: 0 2px;
	}
}

/* Menu */

.menu {
	margin: $gutter 0 0 0;
	border: 1px solid $color-quieter;
	ul {
		margin: 0;
		background-color: white;
		@include no-bullets;
	}
	li {
		border-top: 1px solid $color-shade;
		&:first-child {
			border-top: 0;
		}
	}
	.item {
		padding: $gutter * 0.25 $input-padding-horiz;
		display: block;
		cursor: pointer;
		text-decoration: none;
		.badge {
			float: right;
			margin-right: $gutter * 0.25;
		}
		&:hover {
			background-color: tint($color-shade, 75%);
		}
	}
	&.menu-simple {
		border-width: 0;
		li {
			border-width: 0;
		}
	}
	.sidebar & {
		border-color: $color-primary;
		border-bottom-color: shade($color-primary, 30%);
		ul {
			background-color: $color-primary;
		}
		li {
			border-color: shade($color-primary, 15%);
		}
		.item {
			padding-left: $gutter;
			padding-right: $gutter;
			&:hover,
			&.active {
				color: white;
				background-color: shade($color-primary, 10%);
			}
			&.active {
				position: relative;
				&:after {
					content: '';
					position: absolute;
					top: 0;
					right: 0;
					border: 17px solid;
					border-color: transparent white transparent transparent;
				}
			}
		}
	}
}

/* Tree */

.structure {
	margin: $gutter 0 0 0;
	.tree {
		margin-top: 0;
	}
	.tree-status-pending {
		@include link-color($color-pending);
	}
	.tree-status-archived {
		@include link-color(transparentize(white, 0.7));
	}
}
.tree {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
.tree-list {
	position: relative;
	display: block;
	margin: 0;
	padding: 0;
	list-style: none;
}
.tree-list .tree-list {
	padding-left: $gutter;
}
.tree-collapsed .tree-list {
	display: none;
}
.tree-node,
.tree-empty,
.tree-placeholder {
	display: block;
	position: relative;
	margin: 0;
	padding: 0;
}
.tree-node {
	&:before {
		content: '';
		position: absolute;
		top: 9px;
		left: $gutter;
		opacity: 0.1;
		z-index: 1;
		@include sprite(blank, 10px, 10px);
	}
	button {
		position: absolute;
		z-index: 1;
		padding: 0;
		top: 0;
		left: 0;
		width: $gutter * 2;
		height: 28px;
		text-align: center;
		cursor: pointer;
		border: 0;
		background-color: transparent !important;
		outline: 0;
		span {
			position: absolute;
			top: 9px;
			left: $gutter;
			opacity: 0.75;
		}
		&:hover span {
			opacity: 1;
		}
		&[data-action=expand] span {
			@include sprite(plus, 10px, 10px);
		}
		&[data-action=collapse] span {
			@include sprite(minus, 10px, 10px);
		}
	}
	.tree-item {
		text-decoration: none;
		white-space: nowrap;
		text-overflow: ellipsis;
		overflow: hidden;
		display: block;
		padding: $gutter * 0.1 $gutter $gutter * 0.1 $gutter * 2;
		&:hover,
		&.active {
			color: white;
			background-color: shade($color-primary, 10%);
		}
		&.active {
			@include arrow(28px);
		}
	}
}
.tree-handle {
	cursor: move;
	position: absolute;
	top: 0;
	right: 0;
	height: 28px;
	width: $gutter + 16px;
	background-position: left;
	background-repeat: no-repeat;
	@include image(move);
	opacity: 0;
	@include transition(opacity $speed ease);
	.tree-item:hover + & {
		opacity: 0.5;
	}
	&:hover {
		opacity: 1 !important;
	}
}
.tree-placeholder,
.tree-empty {
	background-position: right;
	background-color: $color-active;
}
.tree-drag {
	background-color: shade($color-primary, 10%);
	position: absolute;
	pointer-events: none;
	z-index: 1000;
	margin-left: -127px;
	&[style] {
		opacity: 0.6 !important
	}
	&, a {
		@include link-color(white);
	}
}

/* Stackable */

.stackable {
	.stackable-item {
		margin: 0 0 3px 0;
		display: flex;
		flex-direction: row;
		input:first-child {
			width: 200px;
		}
		input:last-child {
			flex: 1;
			border-left: 0;
		}
	}
}

/* Card */

.card {
	img {
		float: left;
		margin: 0 $gutter * 0.5 0 0;
	}
}

/* Editor */

.mce-btn-ayre {
	i:before {
		color: $color-focus;
	}
}
.mce-menu-item:hover,
.mce-menu-item.mce-selected,
.mce-menu-item:focus,
.mce-menu-item:hover i[style],
.mce-menu-item.mce-selected i[style],
.mce-menu-item:focus i[style],
.mce-menu-item:hover span[style],
.mce-menu-item.mce-selected span[style],
.mce-menu-item:focus span[style] {
	color: white !important;
}